name: Build & Publish API

on:
  push:
    branches:
     - main
    paths:
     - "src/DQRetro.TournamentTracker.Api/**"
     - ".github/workflows/api.yml"
  pull_request:
    paths:
     - "src/DQRetro.TournamentTracker.Api/**"
     - ".github/workflows/api.yml"

jobs:
  build:
    name: Build & Publish API
    runs-on: "ubuntu-latest"
    
    env:
      API_CSPROJ_PATH: src/DQRetro.TournamentTracker.Api/DQRetro.TournamentTracker.Api.csproj
      API_OUTPUT_FOLDER: ./DQRetro.TournamentTracker.Api
      DOTNET_CONFIGURATION: Release
      DOTNET_SERVER_GC: false
      IS_MAIN: ${{ github.ref == 'refs/heads/main' }}
    
    steps:
      - name: "Src: Checkout"
        uses: actions/checkout@v5
      
      - name: ".NET: Install SDK"
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.0.x"
      
      - name: ".NET: Restore"
        run: dotnet restore ${{ env.API_CSPROJ_PATH }}
      
      - name: ".NET: Build"
        run: dotnet build ${{ env.API_CSPROJ_PATH }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-restore
      
      - name: ".NET: Publish"
        run: dotnet publish ${{ env.API_CSPROJ_PATH }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-restore --no-build --output ${{ env.API_OUTPUT_FOLDER }} /p:ServerGarbageCollection=${{ env.DOTNET_SERVER_GC }}

      - name: "Publish: API Artifact"
        if: ${{ env.IS_MAIN == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: DQRetro.TournamentTracker.Api
          path: ${{ env.API_OUTPUT_FOLDER }}
          compression-level: 9 # Refers to ZLib compression levels (between 0(none) and 9(heavily compressed))
          if-no-files-found: error
